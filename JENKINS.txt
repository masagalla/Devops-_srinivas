                                                  JENKINS
                                                 ---------

CICD:

Continuous integration & Importance (CICD)
-----------------------------------
      
   Importance of Integration 

1. Improves quality
    
         improves the quality by running multiple unit test and analysis various static code 


2. increase Productivity 

         Automating build code saves a lot of time , there by increasing productivity 

3. Reduces Risk

         Eliminate the risk of potential human errors by Automating test 


                      INTRODUCTION TO JENKINS 
                    ---------------------------


 Features of Jenkins 

   1. easy installation process
   2. provides advance security
   3. optimized Performance 
   4. Upgrades are easily available 
   5. light weight container support
   6. Distributed team management 



What is Continuous Integration ?

   "it is the process of automating the building and testing of code , 
    each time one of the team member commits changes to version control"

 CI---continuous integration 
 CD---continuous deliver(release)/ deployment



Popular tools for continuous integration 

   Gitlab
   Codeship
   Bamboo
   Jenkins 
   Teamcity 
   Travis CI


 ---> from AWS cloud if we wanted to perform CI/CD ,so there are various services like code commit,  
      code deploy and code guru ,AWS code build ,AWS code commit 
      AWS code Deploy, AWS code pipeline  
 

 ---> From Azure cloud we have Azure Devops ,Azure Board, Azure Repos Azure Test Plane , Azure Pipeline ,Azure Artifacts 

What is Jenkins:

     "A continuous integration server or Automation server which manages and control process 
      such as plan, code, build, deploy, operate and monitor in Devops Environment "  


Why Jenkins is so popular

       Open source 
       good plugin support  
       good community support
       fast and Reliable 
       good od support 
       scripted builds     


TOPICS:

   --> Jenkins Architecture 
   --> Plugin management in Jenkins 
   --> Jenkins security management 
   --> Notification in Jenkins 
   --> Jenkins master slave Architecture 
   --> Jenkins Delivery pipeline 
   --> Jenkins declarative pipeline   
     

Jenkins Architecture : Source control Management  


                                                                                 ______________________________
                              --------------------------------------------       | is branch tests ,release or|
    Git hub---> Jenkins ---> |build+unit test -->function test --> deploy |----->| production                 |
                             ----------------------------------------------      _________________________________         
                                                                                   |           |                  |
                                                                         test environment Release environment   Production Environment



  Plugin management in Jenkins 
  -----------------------------
                           -----
                           |tabs|
                           ------
                              | 
     ______________________________________________
     |                |                |           |
   updates         Available       Install       advanced 


      (why we need plugins : To have extra Functionalities)
    


  updates : shows the updates to plugins already installed 
 
  Available : Shows plugins that are available for installation

  Installed : Displays Plugins installed that have no updates 

  Advanced : list configuration of HTTP proxy ,allows manual upload of plugin and URL of plugin site 


   " in real time we can not installed the plugins as simple as that reason being they might be challenges with 
     proxy settings as well as VPN in order to avoid we should configured HTTP proxy in plugin of Advanced tab"



   How to install Jenkins on windows 
   ----------------------------------

Different ways of installations 

  by using Docker 
     using Kubernetes 
     using war File 
     Offline installations 

Pre-Requisites 

  ## minimum -hardware requirement 
       ---> 256 MB of RAM 
       ---> 1 GB of drive space (although 10GB is a recommended minimum if Jenkins as a Docker Container)
  ## Recommended hardware configuration for a small Team 
       --> 4 GB of RAM
       --> 50 GB of drive Space 


  ## Jenkins Tool is develop on the Java code 

     
Pre-requisites 
      
  ---> A system running windows 10
  ---> the latest copy of java development kit or java runtime environment installed 


installation process : Steps 
---------------------
  
   browse to download page of Jenkins under the downloading Jenkins section is list of installers for the long tern support (LTS)
   version of Jenkins .click the window link to began the download .
   
     Download Jenkins 2.479.3 
   
   once you click on windows text under download Jenkins 


 1. once after downloading need to go to downloaded folder double click on Jenkins which is of type windows installed package 

 2. the setup wizard starts ,click next to proceed 
 
 3. select the install destination folder and click next to continue 
 
 4. under the run service as a local or domain user option, enter password for the domain username and password for the 
    user account you want to run Jenkins  

 5. Under the Run service as a local or domain user option, enter the domain username and password for the user account you want to run Jenkins with. Click       Test Credentials to verify the login data, then click Next to proceed.

6. Enter the port number you want Jenkins to run on. Click Test Port to check if the selected port is available, then click Next to continue.

7. Select the directory where Java is installed on your system and click Next to proceed.
   
 
8. Select the features you want to install with Jenkins and click Next to continue.

9. Click Install to start the installation process.

 

   How to Configure the Jenkins (Unblock Jenkins) 
   ----------------------------

After completing the installation process, you have to unblock Jenkins before you can customize and start using it.

    1. In your web browser, navigate to the port number you selected during the installation using the following address:

        example:   http://localhost:[port number]  or 127.0.0.1:8080


    2. Navigate to the location on your system specified by the Unblock Jenkins page.

       please copy the password from location 
        
         c:programDate\Jenkins\Jenkins\secretes\initialAdminPassword
      
            where : initialAdminPassword is file 

             ( in order to read the data of that file use cat command )

                (cat c:programDate\Jenkins\Jenkins\secretes\initialAdminPassword )   
       copy the password from the initialAdminPassword file         

    5. Paste the password in the Administrator password field on the Unblock Jenkins page and click Continue to proceed.


          customize Jenkins 
        --------------------


   Once you unlock Jenkins, customize and prepare the Jenkins environment.


1. Click the Install suggested plugins button to have Jenkins automatically install the most frequently used plugins.

        (install the suggested plugins )
   

2. After Jenkins finishes installing the plugins, enter the required information on the Create First Admin User page. Click Save and Continue to proceed.


 How to stop the Jenkins server on windows 
-------------------------------------------

in windows search option search for services and select search for Jenkins (left side top)


how to restart the Jenkins
----------------------------

  safe restart 
   go to URL of Jenkins 
    http://located :8080/state Restart


   06-02-2025
  -------------

Plugin Installation 
-------------------

There are 2 ways to install the plugin one is Automatically and second one is Manually 

 Automatically 
--------------

once login Jenkins GUI left side you will see the option of manage Jenkins , click on manage Jenkins 
in 1st tab there is a system configuration under that see plugin.

click on the plugin go to available plugin and search for plugin and search for the plugin within is required.

select the plugin under the list once you select the plugin install button will be highlighted than click on install button 


 Manually
--------
  
under plugin tab go for available plugin and search for plugin click on the plugin which is required .

once you click on the plugin new tab will open .click on releases under release you will see various of the plugins 
go for the plugin which is required specific version 

under the install options 

  under the download direct link once you click on direct to local system .


when we download plugin in manual way again we need to deploy in Jenkins 

in Jenkins GUI plugins tabs click on Advanced settings choose file the file button to upload which is downloaded to local system 

---> when we install in Automatic way plugins extension is JPI (Jenkins plugin)

---> when we install in manual way plugin extension is HPI(Hudson plugin)

 

 How to uninstall the plugin
----------------------------------

manage Jenkins-->plugins-->install plugins -->search plugin name 

which we want to uninstall select the plugin and than uninstall button 
will be highlighted once clicked uninstall plugin will get uninstall 


 How to updated the Plugin 
--------------------------

manage Jenkins --> plugins -->updates 

select the plugin and the click on update button will be highlighted once clicked on update plugin will get updated.


" In real time we should not updated the plugin directly reason being there may be changes the encountered to update the plugin in our local 
   machines where other team member will not may affective "


How to Create The users 
-------------------------

manage Jenkins --> than security -->users (users create/delete/modify users that can login to this Jenkins )


click user--> create user button-->click on it will ask
  
              username 
                 |
              password
                 |
             configuration
                  |
               full name 
                  |
                E-mail ---> click on create user name button





how to give permission to the users 
------------------------------------

manage Jenkins -->security (secure Jenkins define who is allowed to access use the system)-->click on security -->authorization -->add user button(click on it )--> it will as user id ---> than click on ok button --> than give the required permission to user by checking the box (the minimum access is to give overall read) 


  By default whatever we create users for Jenkins will get stored in Jenkins own user database .this is suitable for small set up where you have no 
  existing user database else where 


    other option is LDAP (lightweight directory Access protocol)




Authorization Strategies
--------------------------

By default we will be seeing project based metrics Authorization strategy with this we can manage the Authorization based on the option 
 available under strategy 


example: credentials , agent ,job, run, view etc


matrix Authorization Strategy (real time)

matrix Authorization allow configuring the lowest level permissions such as starting new builds , configuring items, or deleting them ,individually 

RBAC (role based access controll)  one of the way where we can secure Jenkins 

   
Jenkins Project (project or job)
-----------------------------------

it is a combination of one or more tasks 

--> free style project -defining in GitHub (task)
     
           click general purpose job types that check out from up to one SCM, executes build steps serially , followed by post-build steps 
           like archiving artifacts and sending email notification    

--> maven project 
--> pipeline (workflow)
    
      Orchestrates long-running activities that can span multiple build agents . Suitable for building pipeline (formerly known as workflows )and /org organizing complex activities that do not easily fit in free- style job type 


--> Multi-configuration project 
     
       suitable Projects that need a large number of different configurations, such as testing on multiple environments, platform-specific builds, etc



---> Folder 

       creates a container that stores nested items in it .useful for grouping things together .unlike view, which is just a filter, a folder creates a separate namespace, so you can have multiple things of the same name as long as they are in different folders 

---> multibranch pipeline 

      creates a set of pipeline projects according to detected branches in one SCM

---> Organization folder

    Create set of multibranch projects subfolders by scanning for repositories 




   How to create job or project
   -----------------------------

in Jenkins GUI to the left side click on this new item , enter an item name or job name 

than select an item --> click on ok which will be highlighted 

 the job configuration is consist of where we can give information or description about the project , general  
 

your code management where we will be passing users of the repositories , build triggers in what way we wanted to trigger or build that job build environment, build steps (where we can add tasks post-build actions )

 How to create free style basic Job 

     new item 

    enter item name 

  select item type and click on ok 

   go to the build steps  configuration of the job on add  build steps dropdown select execute windows batch command 

 --> Blue Ocean(plugin )  rethinks the Jenkins user experience 

  designed from the group for Jenkins pipeline and compatible with freestyle jobs . 
    
           (07-02-2025)
         --------------

what if Jenkins user forget the password
----------------------------------------

As a Jenkins administrator there is provision to reset the users credentials 


manage Jenkins-->security--> users  which need to be reset and click on security (left side you will be see option)

password and confirmation password (where we can change the password and click on save)

once as a administrator change the password again you need to inform to user saying follow steps to change password 

once logged into the Jenkins GUI 

click on user name (top right corner )
       |
    security
       |
where we can change the password 
       |
  click on save 
    

## Slaves , Nodes ,Agents these 3 terminologies are same in Jenkins 

 

Jenkins Folders
---------------

in windows OS we can see all Jenkins information and configuration under path is 

   c:\programdata\Jenkins\.jenkins \

under Jenkins folder
--------------------
  we can see users folder (where all the Jenkins users data available)

work space 
-----------

where all the configuration jobs information available 


secretes 
---------

where all the configuration secretes are available 

plugins
-------
All the plugins (which are installed manually & Automatically )available 

Nodes 
-----
  where all the configuration nodes are available 

logins
------

we can see slaves (if configured) and tasks logs are available 


Apart from the above folder there is Jenkins configuration file namely "config.xml"
 (if at all changing the config.xml file first take backup of the file )



we can also see the Jenkins logs in Jenkins GUI

path: manage Jenkins -->status information -->system logs -->all Jenkins logs 
  once click it we can see all the log details of log.



## we can see the Jenkins version bottom right corner in Jenkins GUI

and also path : manage Jenkins --> status -->information-->about Jenkins (here also we can see the version) 



## Ways to Trigger jobs
------------------------

there are 5 ways 

1. trigger build remotely (e.g from cripts)

   Enable this option if you would like to trigger new builds by accessing a special predefined URL (convenient for scripts).
   You'll need to provide an authorization token in the form of a string so that only those who know it would be able to remotely trigger this project's  builds.
 This is most useful when your Jenkins instance grants read access to this job to anonymous users.
 When that's not the case, Jenkins will reject requests sent to the trigger URL even when the correct token is specified.

  Use the following URL to trigger build remotely: JENKINS_URL/job/Aja%20team/build?token=TOKEN_NAME or /buildWithParameters?token=TOKEN_NAME


2. Build After other projects are build (up stream and down stream )

     Set up a trigger so that when some other projects finish building, a new build is scheduled for this project. This is convenient for running an extensive test after a build is complete, for example.
  
  we need to pause the project name (which are configured already )
  under the Project 

rigger only if build is stable
Trigger even if the build is unstable
Trigger even if the build fails
Always trigger, even if the build is aborted 


3. Build Periodically (in schedule )

     this fields follows the syntax of cron (with minor different )specifically each line consists of 5 fields separated by TAB or whitespace 
     
      MINUTE	Minutes within the hour (0–59)
HOUR	The hour of the day (0–23)
DOM	The day of the month (1–31)
MONTH	The month (1–12)
DOW	The day of the week (0–7) where 0 and 7 are Sunday.
To specify multiple values for one field, the following operators are available. In the order of precedence,    



4. GitHub hook trigger for GitSCM polling 

      When Jenkins receives a GitHub push hook, GitHub Plugin checks to see whether the hook came from a GitHub repository which matches the Git repository     defined in SCM/Git section of this job

5. polls SCM 

    Configure Jenkins to poll changes in SCM.



## trigger means running the job 


we can also trigger the jobs manually  apart from above 5 ways 






 
  






















  


























