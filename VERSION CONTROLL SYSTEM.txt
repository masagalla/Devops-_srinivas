VERSION CONTROLL SYSTEM:
-----------------------

## why need version control system 

 --> collaborating 
 --> storing version 
 --> figuring out what happened 
 --> backup 

## what is version control
----------------------------

   version control is a system that documents changes made to be file or set of files .
   it allows multiple users to manage multiple revisions of the same unit of information.
   it is a snapshot of your project over time 

## version control types 

    @ 1.local version control (LVC) :
        
         --> the practice of having the version database in the local machine 
            
            issues: multiple people working on the same project and local machine crashed we loosed the entire code  
        
            solution : centralized version control  


   @ 2. centralized version control (cvc):
       
         --> local version control's issues are resolved by centralized version control 
         --> in cvc , a central repository is maintain where all the versioned files are kept 
         --> now users can checkout and check in files from their different computers at any time 

          issue: in case of central server failure whole system goes down 

          solution : Distributed version control 
   
   @ 3.Distributed version Control system (DVCS)

         --> version database is stored at every users local system and at the remote server 
         --> users manipulates the local fields and then upload the changes to the remote 
         --> if any of the servers die a client server can be used to restore 



 ## INTRODUCTION TO GIT:


       git is an open source distributed version control system (DVCS) which records changes 
       made to the fields lying employees on the speed ,data integrity and distributed ,
       non-linear workflows 


##GIT FILE WORK FLOW 

       	the remote is the server where all the collaborates uploaded changes made to the fieles

      @ local repository
 
         --> local repository is users copy of the version control database 
         --> the users accesses all the files than local repository and push the change made to the local repository 

      @ work space
 
        --> work space is users active directory 
        --> the users modified existing fields and create the new files in this space 
            git track this changes compared to your local repository 

      @ staging Area/ index Area 
       
         --> stage area is a place whare all the modified files marked to be committed are placed 

##COMMANDS
----------
  @ Clone 
 
       clone is command creates a copy of an existing remote repository inside the local repository 
  
  @ add
       add is a command which add the files from work space to staging area  
  
  @ commit
  
       commit command commits all the changes made in the staging area to local repository 
  
  @ push 

       push command pushes all the changes made in the local repository to the remote repository 
  
  @ fetch 

      fetch command collets the changes made in the remote repository and copies them to local repository  
      this command does not affect our workspace 
 
@ pull

     pull like fetch , gets all the changes from the remote repository and copies them to local repository .
     pull merges those changes to the current working direction 



          



        
           
